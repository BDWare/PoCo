// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class TaskInitialize extends EthereumEvent {
  get params(): TaskInitialize__Params {
    return new TaskInitialize__Params(this);
  }
}

export class TaskInitialize__Params {
  _event: TaskInitialize;

  constructor(event: TaskInitialize) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get workerpool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TaskContribute extends EthereumEvent {
  get params(): TaskContribute__Params {
    return new TaskContribute__Params(this);
  }
}

export class TaskContribute__Params {
  _event: TaskContribute;

  constructor(event: TaskContribute) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get worker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get hash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class TaskConsensus extends EthereumEvent {
  get params(): TaskConsensus__Params {
    return new TaskConsensus__Params(this);
  }
}

export class TaskConsensus__Params {
  _event: TaskConsensus;

  constructor(event: TaskConsensus) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get consensus(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class TaskReveal extends EthereumEvent {
  get params(): TaskReveal__Params {
    return new TaskReveal__Params(this);
  }
}

export class TaskReveal__Params {
  _event: TaskReveal;

  constructor(event: TaskReveal) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get worker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get digest(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class TaskReopen extends EthereumEvent {
  get params(): TaskReopen__Params {
    return new TaskReopen__Params(this);
  }
}

export class TaskReopen__Params {
  _event: TaskReopen;

  constructor(event: TaskReopen) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class TaskFinalize extends EthereumEvent {
  get params(): TaskFinalize__Params {
    return new TaskFinalize__Params(this);
  }
}

export class TaskFinalize__Params {
  _event: TaskFinalize;

  constructor(event: TaskFinalize) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get results(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class TaskClaimed extends EthereumEvent {
  get params(): TaskClaimed__Params {
    return new TaskClaimed__Params(this);
  }
}

export class TaskClaimed__Params {
  _event: TaskClaimed;

  constructor(event: TaskClaimed) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class AccurateContribution extends EthereumEvent {
  get params(): AccurateContribution__Params {
    return new AccurateContribution__Params(this);
  }
}

export class AccurateContribution__Params {
  _event: AccurateContribution;

  constructor(event: AccurateContribution) {
    this._event = event;
  }

  get worker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get taskid(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class FaultyContribution extends EthereumEvent {
  get params(): FaultyContribution__Params {
    return new FaultyContribution__Params(this);
  }
}

export class FaultyContribution__Params {
  _event: FaultyContribution;

  constructor(event: FaultyContribution) {
    this._event = event;
  }

  get worker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get taskid(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class CreateCategory extends EthereumEvent {
  get params(): CreateCategory__Params {
    return new CreateCategory__Params(this);
  }
}

export class CreateCategory__Params {
  _event: CreateCategory;

  constructor(event: CreateCategory) {
    this._event = event;
  }

  get catid(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get description(): string {
    return this._event.parameters[2].value.toString();
  }

  get workClockTimeRef(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferred extends EthereumEvent {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class IexecHub__viewCategoryResultCategoryStruct extends EthereumTuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get workClockTimeRef(): BigInt {
    return this[2].toBigInt();
  }
}

export class IexecHub__viewTaskResultValue0Struct extends EthereumTuple {
  get status(): i32 {
    return this[0].toI32();
  }

  get dealid(): Bytes {
    return this[1].toBytes();
  }

  get idx(): BigInt {
    return this[2].toBigInt();
  }

  get timeref(): BigInt {
    return this[3].toBigInt();
  }

  get contributionDeadline(): BigInt {
    return this[4].toBigInt();
  }

  get revealDeadline(): BigInt {
    return this[5].toBigInt();
  }

  get finalDeadline(): BigInt {
    return this[6].toBigInt();
  }

  get consensusValue(): Bytes {
    return this[7].toBytes();
  }

  get revealCounter(): BigInt {
    return this[8].toBigInt();
  }

  get winnerCounter(): BigInt {
    return this[9].toBigInt();
  }

  get contributors(): Array<Address> {
    return this[10].toAddressArray();
  }

  get resultDigest(): Bytes {
    return this[11].toBytes();
  }

  get results(): Bytes {
    return this[12].toBytes();
  }
}

export class IexecHub__viewContributionResultValue0Struct extends EthereumTuple {
  get status(): i32 {
    return this[0].toI32();
  }

  get resultHash(): Bytes {
    return this[1].toBytes();
  }

  get resultSeal(): Bytes {
    return this[2].toBytes();
  }

  get enclaveChallenge(): Address {
    return this[3].toAddress();
  }
}

export class IexecHub__viewTaskABILegacyResult {
  value0: i32;
  value1: Bytes;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: Bytes;
  value8: BigInt;
  value9: BigInt;
  value10: Array<Address>;
  value11: Bytes;

  constructor(
    value0: i32,
    value1: Bytes,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: Bytes,
    value8: BigInt,
    value9: BigInt,
    value10: Array<Address>,
    value11: Bytes
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromI32(this.value0));
    map.set("value1", EthereumValue.fromFixedBytes(this.value1));
    map.set("value2", EthereumValue.fromUnsignedBigInt(this.value2));
    map.set("value3", EthereumValue.fromUnsignedBigInt(this.value3));
    map.set("value4", EthereumValue.fromUnsignedBigInt(this.value4));
    map.set("value5", EthereumValue.fromUnsignedBigInt(this.value5));
    map.set("value6", EthereumValue.fromUnsignedBigInt(this.value6));
    map.set("value7", EthereumValue.fromFixedBytes(this.value7));
    map.set("value8", EthereumValue.fromUnsignedBigInt(this.value8));
    map.set("value9", EthereumValue.fromUnsignedBigInt(this.value9));
    map.set("value10", EthereumValue.fromAddressArray(this.value10));
    map.set("value11", EthereumValue.fromBytes(this.value11));
    return map;
  }
}

export class IexecHub__viewContributionABILegacyResult {
  value0: i32;
  value1: Bytes;
  value2: Bytes;
  value3: Address;

  constructor(value0: i32, value1: Bytes, value2: Bytes, value3: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromI32(this.value0));
    map.set("value1", EthereumValue.fromFixedBytes(this.value1));
    map.set("value2", EthereumValue.fromFixedBytes(this.value2));
    map.set("value3", EthereumValue.fromAddress(this.value3));
    return map;
  }
}

export class IexecHub__viewCategoryABILegacyResult {
  value0: string;
  value1: string;
  value2: BigInt;

  constructor(value0: string, value1: string, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromString(this.value0));
    map.set("value1", EthereumValue.fromString(this.value1));
    map.set("value2", EthereumValue.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class IexecHub extends SmartContract {
  static bind(address: Address): IexecHub {
    return new IexecHub("IexecHub", address);
  }

  verifySignature(
    _identity: Address,
    _hash: Bytes,
    _signature: Bytes
  ): boolean {
    let result = super.call("verifySignature", [
      EthereumValue.fromAddress(_identity),
      EthereumValue.fromFixedBytes(_hash),
      EthereumValue.fromBytes(_signature)
    ]);
    return result[0].toBoolean();
  }

  createCategory(
    name: string,
    description: string,
    workClockTimeRef: BigInt
  ): BigInt {
    let result = super.call("createCategory", [
      EthereumValue.fromString(name),
      EthereumValue.fromString(description),
      EthereumValue.fromUnsignedBigInt(workClockTimeRef)
    ]);
    return result[0].toBigInt();
  }

  appregistry(): Address {
    let result = super.call("appregistry", []);
    return result[0].toAddress();
  }

  CONSENSUS_DURATION_RATIO(): BigInt {
    let result = super.call("CONSENSUS_DURATION_RATIO", []);
    return result[0].toBigInt();
  }

  viewCategory(_catid: BigInt): IexecHub__viewCategoryResultCategoryStruct {
    let result = super.call("viewCategory", [
      EthereumValue.fromUnsignedBigInt(_catid)
    ]);
    return result[0].toTuple() as IexecHub__viewCategoryResultCategoryStruct;
  }

  REVEAL_DEADLINE_RATIO(): BigInt {
    let result = super.call("REVEAL_DEADLINE_RATIO", []);
    return result[0].toBigInt();
  }

  CONTRIBUTION_DEADLINE_RATIO(): BigInt {
    let result = super.call("CONTRIBUTION_DEADLINE_RATIO", []);
    return result[0].toBigInt();
  }

  owner(): Address {
    let result = super.call("owner", []);
    return result[0].toAddress();
  }

  isOwner(): boolean {
    let result = super.call("isOwner", []);
    return result[0].toBoolean();
  }

  workerpoolregistry(): Address {
    let result = super.call("workerpoolregistry", []);
    return result[0].toAddress();
  }

  FINAL_DEADLINE_RATIO(): BigInt {
    let result = super.call("FINAL_DEADLINE_RATIO", []);
    return result[0].toBigInt();
  }

  iexecclerk(): Address {
    let result = super.call("iexecclerk", []);
    return result[0].toAddress();
  }

  datasetregistry(): Address {
    let result = super.call("datasetregistry", []);
    return result[0].toAddress();
  }

  countCategory(): BigInt {
    let result = super.call("countCategory", []);
    return result[0].toBigInt();
  }

  REVEAL_DURATION_RATIO(): BigInt {
    let result = super.call("REVEAL_DURATION_RATIO", []);
    return result[0].toBigInt();
  }

  viewTask(_taskid: Bytes): IexecHub__viewTaskResultValue0Struct {
    let result = super.call("viewTask", [
      EthereumValue.fromFixedBytes(_taskid)
    ]);
    return result[0].toTuple() as IexecHub__viewTaskResultValue0Struct;
  }

  viewContribution(
    _taskid: Bytes,
    _worker: Address
  ): IexecHub__viewContributionResultValue0Struct {
    let result = super.call("viewContribution", [
      EthereumValue.fromFixedBytes(_taskid),
      EthereumValue.fromAddress(_worker)
    ]);
    return result[0].toTuple() as IexecHub__viewContributionResultValue0Struct;
  }

  viewScore(_worker: Address): BigInt {
    let result = super.call("viewScore", [EthereumValue.fromAddress(_worker)]);
    return result[0].toBigInt();
  }

  checkResources(app: Address, dataset: Address, workerpool: Address): boolean {
    let result = super.call("checkResources", [
      EthereumValue.fromAddress(app),
      EthereumValue.fromAddress(dataset),
      EthereumValue.fromAddress(workerpool)
    ]);
    return result[0].toBoolean();
  }

  resultFor(id: Bytes): Bytes {
    let result = super.call("resultFor", [EthereumValue.fromFixedBytes(id)]);
    return result[0].toBytes();
  }

  initialize(_dealid: Bytes, idx: BigInt): Bytes {
    let result = super.call("initialize", [
      EthereumValue.fromFixedBytes(_dealid),
      EthereumValue.fromUnsignedBigInt(idx)
    ]);
    return result[0].toBytes();
  }

  initializeArray(_dealid: Array<Bytes>, _idx: Array<BigInt>): boolean {
    let result = super.call("initializeArray", [
      EthereumValue.fromFixedBytesArray(_dealid),
      EthereumValue.fromUnsignedBigIntArray(_idx)
    ]);
    return result[0].toBoolean();
  }

  claimArray(_taskid: Array<Bytes>): boolean {
    let result = super.call("claimArray", [
      EthereumValue.fromFixedBytesArray(_taskid)
    ]);
    return result[0].toBoolean();
  }

  initializeAndClaimArray(_dealid: Array<Bytes>, _idx: Array<BigInt>): boolean {
    let result = super.call("initializeAndClaimArray", [
      EthereumValue.fromFixedBytesArray(_dealid),
      EthereumValue.fromUnsignedBigIntArray(_idx)
    ]);
    return result[0].toBoolean();
  }

  viewTaskABILegacy(_taskid: Bytes): IexecHub__viewTaskABILegacyResult {
    let result = super.call("viewTaskABILegacy", [
      EthereumValue.fromFixedBytes(_taskid)
    ]);
    return new IexecHub__viewTaskABILegacyResult(
      result[0].toI32(),
      result[1].toBytes(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBytes(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toAddressArray(),
      result[11].toBytes()
    );
  }

  viewContributionABILegacy(
    _taskid: Bytes,
    _worker: Address
  ): IexecHub__viewContributionABILegacyResult {
    let result = super.call("viewContributionABILegacy", [
      EthereumValue.fromFixedBytes(_taskid),
      EthereumValue.fromAddress(_worker)
    ]);
    return new IexecHub__viewContributionABILegacyResult(
      result[0].toI32(),
      result[1].toBytes(),
      result[2].toBytes(),
      result[3].toAddress()
    );
  }

  viewCategoryABILegacy(_catid: BigInt): IexecHub__viewCategoryABILegacyResult {
    let result = super.call("viewCategoryABILegacy", [
      EthereumValue.fromUnsignedBigInt(_catid)
    ]);
    return new IexecHub__viewCategoryABILegacyResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt()
    );
  }
}

export class CreateCategoryCall extends EthereumCall {
  get inputs(): CreateCategoryCall__Inputs {
    return new CreateCategoryCall__Inputs(this);
  }

  get outputs(): CreateCategoryCall__Outputs {
    return new CreateCategoryCall__Outputs(this);
  }
}

export class CreateCategoryCall__Inputs {
  _call: CreateCategoryCall;

  constructor(call: CreateCategoryCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get workClockTimeRef(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateCategoryCall__Outputs {
  _call: CreateCategoryCall;

  constructor(call: CreateCategoryCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends EthereumCall {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends EthereumCall {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AttachContractsCall extends EthereumCall {
  get inputs(): AttachContractsCall__Inputs {
    return new AttachContractsCall__Inputs(this);
  }

  get outputs(): AttachContractsCall__Outputs {
    return new AttachContractsCall__Outputs(this);
  }
}

export class AttachContractsCall__Inputs {
  _call: AttachContractsCall;

  constructor(call: AttachContractsCall) {
    this._call = call;
  }

  get _iexecclerkAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _appregistryAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _datasetregistryAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _workerpoolregistryAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class AttachContractsCall__Outputs {
  _call: AttachContractsCall;

  constructor(call: AttachContractsCall) {
    this._call = call;
  }
}

export class InitializeCall extends EthereumCall {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _dealid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get idx(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ContributeCall extends EthereumCall {
  get inputs(): ContributeCall__Inputs {
    return new ContributeCall__Inputs(this);
  }

  get outputs(): ContributeCall__Outputs {
    return new ContributeCall__Outputs(this);
  }
}

export class ContributeCall__Inputs {
  _call: ContributeCall;

  constructor(call: ContributeCall) {
    this._call = call;
  }

  get _taskid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _resultHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _resultSeal(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _enclaveChallenge(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _enclaveSign(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get _workerpoolSign(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class ContributeCall__Outputs {
  _call: ContributeCall;

  constructor(call: ContributeCall) {
    this._call = call;
  }
}

export class RevealCall extends EthereumCall {
  get inputs(): RevealCall__Inputs {
    return new RevealCall__Inputs(this);
  }

  get outputs(): RevealCall__Outputs {
    return new RevealCall__Outputs(this);
  }
}

export class RevealCall__Inputs {
  _call: RevealCall;

  constructor(call: RevealCall) {
    this._call = call;
  }

  get _taskid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _resultDigest(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class RevealCall__Outputs {
  _call: RevealCall;

  constructor(call: RevealCall) {
    this._call = call;
  }
}

export class ReopenCall extends EthereumCall {
  get inputs(): ReopenCall__Inputs {
    return new ReopenCall__Inputs(this);
  }

  get outputs(): ReopenCall__Outputs {
    return new ReopenCall__Outputs(this);
  }
}

export class ReopenCall__Inputs {
  _call: ReopenCall;

  constructor(call: ReopenCall) {
    this._call = call;
  }

  get _taskid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ReopenCall__Outputs {
  _call: ReopenCall;

  constructor(call: ReopenCall) {
    this._call = call;
  }
}

export class FinalizeCall extends EthereumCall {
  get inputs(): FinalizeCall__Inputs {
    return new FinalizeCall__Inputs(this);
  }

  get outputs(): FinalizeCall__Outputs {
    return new FinalizeCall__Outputs(this);
  }
}

export class FinalizeCall__Inputs {
  _call: FinalizeCall;

  constructor(call: FinalizeCall) {
    this._call = call;
  }

  get _taskid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _results(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class FinalizeCall__Outputs {
  _call: FinalizeCall;

  constructor(call: FinalizeCall) {
    this._call = call;
  }
}

export class ClaimCall extends EthereumCall {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get _taskid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class InitializeArrayCall extends EthereumCall {
  get inputs(): InitializeArrayCall__Inputs {
    return new InitializeArrayCall__Inputs(this);
  }

  get outputs(): InitializeArrayCall__Outputs {
    return new InitializeArrayCall__Outputs(this);
  }
}

export class InitializeArrayCall__Inputs {
  _call: InitializeArrayCall;

  constructor(call: InitializeArrayCall) {
    this._call = call;
  }

  get _dealid(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get _idx(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class InitializeArrayCall__Outputs {
  _call: InitializeArrayCall;

  constructor(call: InitializeArrayCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ClaimArrayCall extends EthereumCall {
  get inputs(): ClaimArrayCall__Inputs {
    return new ClaimArrayCall__Inputs(this);
  }

  get outputs(): ClaimArrayCall__Outputs {
    return new ClaimArrayCall__Outputs(this);
  }
}

export class ClaimArrayCall__Inputs {
  _call: ClaimArrayCall;

  constructor(call: ClaimArrayCall) {
    this._call = call;
  }

  get _taskid(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class ClaimArrayCall__Outputs {
  _call: ClaimArrayCall;

  constructor(call: ClaimArrayCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeAndClaimArrayCall extends EthereumCall {
  get inputs(): InitializeAndClaimArrayCall__Inputs {
    return new InitializeAndClaimArrayCall__Inputs(this);
  }

  get outputs(): InitializeAndClaimArrayCall__Outputs {
    return new InitializeAndClaimArrayCall__Outputs(this);
  }
}

export class InitializeAndClaimArrayCall__Inputs {
  _call: InitializeAndClaimArrayCall;

  constructor(call: InitializeAndClaimArrayCall) {
    this._call = call;
  }

  get _dealid(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get _idx(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class InitializeAndClaimArrayCall__Outputs {
  _call: InitializeAndClaimArrayCall;

  constructor(call: InitializeAndClaimArrayCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
