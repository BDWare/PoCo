// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OrdersMatched extends EthereumEvent {
  get params(): OrdersMatched__Params {
    return new OrdersMatched__Params(this);
  }
}

export class OrdersMatched__Params {
  _event: OrdersMatched;

  constructor(event: OrdersMatched) {
    this._event = event;
  }

  get dealid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get appHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get datasetHash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get workerpoolHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get requestHash(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get volume(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ClosedAppOrder extends EthereumEvent {
  get params(): ClosedAppOrder__Params {
    return new ClosedAppOrder__Params(this);
  }
}

export class ClosedAppOrder__Params {
  _event: ClosedAppOrder;

  constructor(event: ClosedAppOrder) {
    this._event = event;
  }

  get appHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ClosedDatasetOrder extends EthereumEvent {
  get params(): ClosedDatasetOrder__Params {
    return new ClosedDatasetOrder__Params(this);
  }
}

export class ClosedDatasetOrder__Params {
  _event: ClosedDatasetOrder;

  constructor(event: ClosedDatasetOrder) {
    this._event = event;
  }

  get datasetHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ClosedWorkerpoolOrder extends EthereumEvent {
  get params(): ClosedWorkerpoolOrder__Params {
    return new ClosedWorkerpoolOrder__Params(this);
  }
}

export class ClosedWorkerpoolOrder__Params {
  _event: ClosedWorkerpoolOrder;

  constructor(event: ClosedWorkerpoolOrder) {
    this._event = event;
  }

  get workerpoolHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ClosedRequestOrder extends EthereumEvent {
  get params(): ClosedRequestOrder__Params {
    return new ClosedRequestOrder__Params(this);
  }
}

export class ClosedRequestOrder__Params {
  _event: ClosedRequestOrder;

  constructor(event: ClosedRequestOrder) {
    this._event = event;
  }

  get requestHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class SchedulerNotice extends EthereumEvent {
  get params(): SchedulerNotice__Params {
    return new SchedulerNotice__Params(this);
  }
}

export class SchedulerNotice__Params {
  _event: SchedulerNotice;

  constructor(event: SchedulerNotice) {
    this._event = event;
  }

  get workerpool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get dealid(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class BroadcastAppOrder extends EthereumEvent {
  get params(): BroadcastAppOrder__Params {
    return new BroadcastAppOrder__Params(this);
  }
}

export class BroadcastAppOrder__Params {
  _event: BroadcastAppOrder;

  constructor(event: BroadcastAppOrder) {
    this._event = event;
  }

  get apporder(): BroadcastAppOrderApporderStruct {
    return this._event.parameters[0].value.toTuple() as BroadcastAppOrderApporderStruct;
  }
}

export class BroadcastAppOrderApporderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class BroadcastDatasetOrder extends EthereumEvent {
  get params(): BroadcastDatasetOrder__Params {
    return new BroadcastDatasetOrder__Params(this);
  }
}

export class BroadcastDatasetOrder__Params {
  _event: BroadcastDatasetOrder;

  constructor(event: BroadcastDatasetOrder) {
    this._event = event;
  }

  get datasetorder(): BroadcastDatasetOrderDatasetorderStruct {
    return this._event.parameters[0].value.toTuple() as BroadcastDatasetOrderDatasetorderStruct;
  }
}

export class BroadcastDatasetOrderDatasetorderStruct extends EthereumTuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class BroadcastWorkerpoolOrder extends EthereumEvent {
  get params(): BroadcastWorkerpoolOrder__Params {
    return new BroadcastWorkerpoolOrder__Params(this);
  }
}

export class BroadcastWorkerpoolOrder__Params {
  _event: BroadcastWorkerpoolOrder;

  constructor(event: BroadcastWorkerpoolOrder) {
    this._event = event;
  }

  get workerpoolorder(): BroadcastWorkerpoolOrderWorkerpoolorderStruct {
    return this._event.parameters[0].value.toTuple() as BroadcastWorkerpoolOrderWorkerpoolorderStruct;
  }
}

export class BroadcastWorkerpoolOrderWorkerpoolorderStruct extends EthereumTuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class BroadcastRequestOrder extends EthereumEvent {
  get params(): BroadcastRequestOrder__Params {
    return new BroadcastRequestOrder__Params(this);
  }
}

export class BroadcastRequestOrder__Params {
  _event: BroadcastRequestOrder;

  constructor(event: BroadcastRequestOrder) {
    this._event = event;
  }

  get requestorder(): BroadcastRequestOrderRequestorderStruct {
    return this._event.parameters[0].value.toTuple() as BroadcastRequestOrderRequestorderStruct;
  }
}

export class BroadcastRequestOrderRequestorderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class Deposit extends EthereumEvent {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DepositFor extends EthereumEvent {
  get params(): DepositFor__Params {
    return new DepositFor__Params(this);
  }
}

export class DepositFor__Params {
  _event: DepositFor;

  constructor(event: DepositFor) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get target(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Withdraw extends EthereumEvent {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Reward extends EthereumEvent {
  get params(): Reward__Params {
    return new Reward__Params(this);
  }
}

export class Reward__Params {
  _event: Reward;

  constructor(event: Reward) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ref(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class Seize extends EthereumEvent {
  get params(): Seize__Params {
    return new Seize__Params(this);
  }
}

export class Seize__Params {
  _event: Seize;

  constructor(event: Seize) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ref(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class Lock extends EthereumEvent {
  get params(): Lock__Params {
    return new Lock__Params(this);
  }
}

export class Lock__Params {
  _event: Lock;

  constructor(event: Lock) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unlock extends EthereumEvent {
  get params(): Unlock__Params {
    return new Unlock__Params(this);
  }
}

export class Unlock__Params {
  _event: Unlock;

  constructor(event: Unlock) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class IexecClerk__viewAccountResultAccountStruct extends EthereumTuple {
  get stake(): BigInt {
    return this[0].toBigInt();
  }

  get locked(): BigInt {
    return this[1].toBigInt();
  }
}

export class IexecClerk__viewDealResultDealStruct extends EthereumTuple {
  get app(): IexecClerk__viewDealResultDealAppStruct {
    return this[0].toTuple() as IexecClerk__viewDealResultDealAppStruct;
  }

  get dataset(): IexecClerk__viewDealResultDealDatasetStruct {
    return this[1].toTuple() as IexecClerk__viewDealResultDealDatasetStruct;
  }

  get workerpool(): IexecClerk__viewDealResultDealWorkerpoolStruct {
    return this[2].toTuple() as IexecClerk__viewDealResultDealWorkerpoolStruct;
  }

  get trust(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get tag(): Bytes {
    return this[5].toBytes();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get beneficiary(): Address {
    return this[7].toAddress();
  }

  get callback(): Address {
    return this[8].toAddress();
  }

  get params(): string {
    return this[9].toString();
  }

  get startTime(): BigInt {
    return this[10].toBigInt();
  }

  get botFirst(): BigInt {
    return this[11].toBigInt();
  }

  get botSize(): BigInt {
    return this[12].toBigInt();
  }

  get workerStake(): BigInt {
    return this[13].toBigInt();
  }

  get schedulerRewardRatio(): BigInt {
    return this[14].toBigInt();
  }
}

export class IexecClerk__viewDealResultDealAppStruct extends EthereumTuple {
  get pointer(): Address {
    return this[0].toAddress();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }
}

export class IexecClerk__viewDealResultDealDatasetStruct extends EthereumTuple {
  get pointer(): Address {
    return this[0].toAddress();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }
}

export class IexecClerk__viewDealResultDealWorkerpoolStruct extends EthereumTuple {
  get pointer(): Address {
    return this[0].toAddress();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }
}

export class IexecClerk__signAppOrderInput_apporderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class IexecClerk__signDatasetOrderInput_datasetorderStruct extends EthereumTuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class IexecClerk__signWorkerpoolOrderInput_workerpoolorderStruct extends EthereumTuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class IexecClerk__signRequestOrderInput_requestorderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class IexecClerk__matchOrdersInput_apporderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class IexecClerk__matchOrdersInput_datasetorderStruct extends EthereumTuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class IexecClerk__matchOrdersInput_workerpoolorderStruct extends EthereumTuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class IexecClerk__matchOrdersInput_requestorderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class IexecClerk__cancelAppOrderInput_apporderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class IexecClerk__cancelDatasetOrderInput_datasetorderStruct extends EthereumTuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class IexecClerk__cancelWorkerpoolOrderInput_workerpoolorderStruct extends EthereumTuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class IexecClerk__cancelRequestOrderInput_requestorderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class IexecClerk__viewDealABILegacy_pt1Result {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: Address;
  value4: Address;
  value5: BigInt;
  value6: Address;
  value7: Address;
  value8: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: Address,
    value4: Address,
    value5: BigInt,
    value6: Address,
    value7: Address,
    value8: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromAddress(this.value0));
    map.set("value1", EthereumValue.fromAddress(this.value1));
    map.set("value2", EthereumValue.fromUnsignedBigInt(this.value2));
    map.set("value3", EthereumValue.fromAddress(this.value3));
    map.set("value4", EthereumValue.fromAddress(this.value4));
    map.set("value5", EthereumValue.fromUnsignedBigInt(this.value5));
    map.set("value6", EthereumValue.fromAddress(this.value6));
    map.set("value7", EthereumValue.fromAddress(this.value7));
    map.set("value8", EthereumValue.fromUnsignedBigInt(this.value8));
    return map;
  }
}

export class IexecClerk__viewDealABILegacy_pt2Result {
  value0: BigInt;
  value1: Bytes;
  value2: Address;
  value3: Address;
  value4: Address;
  value5: string;

  constructor(
    value0: BigInt,
    value1: Bytes,
    value2: Address,
    value3: Address,
    value4: Address,
    value5: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromUnsignedBigInt(this.value0));
    map.set("value1", EthereumValue.fromFixedBytes(this.value1));
    map.set("value2", EthereumValue.fromAddress(this.value2));
    map.set("value3", EthereumValue.fromAddress(this.value3));
    map.set("value4", EthereumValue.fromAddress(this.value4));
    map.set("value5", EthereumValue.fromString(this.value5));
    return map;
  }
}

export class IexecClerk__viewConfigABILegacyResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromUnsignedBigInt(this.value0));
    map.set("value1", EthereumValue.fromUnsignedBigInt(this.value1));
    map.set("value2", EthereumValue.fromUnsignedBigInt(this.value2));
    map.set("value3", EthereumValue.fromUnsignedBigInt(this.value3));
    map.set("value4", EthereumValue.fromUnsignedBigInt(this.value4));
    map.set("value5", EthereumValue.fromUnsignedBigInt(this.value5));
    return map;
  }
}

export class IexecClerk__viewAccountABILegacyResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromUnsignedBigInt(this.value0));
    map.set("value1", EthereumValue.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class IexecClerk extends SmartContract {
  static bind(address: Address): IexecClerk {
    return new IexecClerk("IexecClerk", address);
  }

  verifySignature(
    _identity: Address,
    _hash: Bytes,
    _signature: Bytes
  ): boolean {
    let result = super.call("verifySignature", [
      EthereumValue.fromAddress(_identity),
      EthereumValue.fromFixedBytes(_hash),
      EthereumValue.fromBytes(_signature)
    ]);
    return result[0].toBoolean();
  }

  EIP712DOMAIN_SEPARATOR(): Bytes {
    let result = super.call("EIP712DOMAIN_SEPARATOR", []);
    return result[0].toBytes();
  }

  withdraw(_amount: BigInt): boolean {
    let result = super.call("withdraw", [
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  depositForArray(_amounts: Array<BigInt>, _targets: Array<Address>): boolean {
    let result = super.call("depositForArray", [
      EthereumValue.fromUnsignedBigIntArray(_amounts),
      EthereumValue.fromAddressArray(_targets)
    ]);
    return result[0].toBoolean();
  }

  depositFor(_amount: BigInt, _target: Address): boolean {
    let result = super.call("depositFor", [
      EthereumValue.fromUnsignedBigInt(_amount),
      EthereumValue.fromAddress(_target)
    ]);
    return result[0].toBoolean();
  }

  m_presigned(param0: Bytes): boolean {
    let result = super.call("m_presigned", [
      EthereumValue.fromFixedBytes(param0)
    ]);
    return result[0].toBoolean();
  }

  WORKERPOOL_STAKE_RATIO(): BigInt {
    let result = super.call("WORKERPOOL_STAKE_RATIO", []);
    return result[0].toBigInt();
  }

  KITTY_RATIO(): BigInt {
    let result = super.call("KITTY_RATIO", []);
    return result[0].toBigInt();
  }

  GROUPMEMBER_PURPOSE(): BigInt {
    let result = super.call("GROUPMEMBER_PURPOSE", []);
    return result[0].toBigInt();
  }

  viewAccount(_user: Address): IexecClerk__viewAccountResultAccountStruct {
    let result = super.call("viewAccount", [EthereumValue.fromAddress(_user)]);
    return result[0].toTuple() as IexecClerk__viewAccountResultAccountStruct;
  }

  POOL_STAKE_RATIO(): BigInt {
    let result = super.call("POOL_STAKE_RATIO", []);
    return result[0].toBigInt();
  }

  iexechub(): Address {
    let result = super.call("iexechub", []);
    return result[0].toAddress();
  }

  m_requestdeals(param0: Bytes, param1: BigInt): Bytes {
    let result = super.call("m_requestdeals", [
      EthereumValue.fromFixedBytes(param0),
      EthereumValue.fromUnsignedBigInt(param1)
    ]);
    return result[0].toBytes();
  }

  deposit(_amount: BigInt): boolean {
    let result = super.call("deposit", [
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  KITTY_MIN(): BigInt {
    let result = super.call("KITTY_MIN", []);
    return result[0].toBigInt();
  }

  m_consumed(param0: Bytes): BigInt {
    let result = super.call("m_consumed", [
      EthereumValue.fromFixedBytes(param0)
    ]);
    return result[0].toBigInt();
  }

  token(): Address {
    let result = super.call("token", []);
    return result[0].toAddress();
  }

  viewRequestDeals(_id: Bytes): Array<Bytes> {
    let result = super.call("viewRequestDeals", [
      EthereumValue.fromFixedBytes(_id)
    ]);
    return result[0].toBytesArray();
  }

  viewDeal(_id: Bytes): IexecClerk__viewDealResultDealStruct {
    let result = super.call("viewDeal", [EthereumValue.fromFixedBytes(_id)]);
    return result[0].toTuple() as IexecClerk__viewDealResultDealStruct;
  }

  viewConsumed(_id: Bytes): BigInt {
    let result = super.call("viewConsumed", [
      EthereumValue.fromFixedBytes(_id)
    ]);
    return result[0].toBigInt();
  }

  viewPresigned(_id: Bytes): boolean {
    let result = super.call("viewPresigned", [
      EthereumValue.fromFixedBytes(_id)
    ]);
    return result[0].toBoolean();
  }

  signAppOrder(
    _apporder: IexecClerk__signAppOrderInput_apporderStruct
  ): boolean {
    let result = super.call("signAppOrder", [
      EthereumValue.fromTuple(_apporder)
    ]);
    return result[0].toBoolean();
  }

  signDatasetOrder(
    _datasetorder: IexecClerk__signDatasetOrderInput_datasetorderStruct
  ): boolean {
    let result = super.call("signDatasetOrder", [
      EthereumValue.fromTuple(_datasetorder)
    ]);
    return result[0].toBoolean();
  }

  signWorkerpoolOrder(
    _workerpoolorder: IexecClerk__signWorkerpoolOrderInput_workerpoolorderStruct
  ): boolean {
    let result = super.call("signWorkerpoolOrder", [
      EthereumValue.fromTuple(_workerpoolorder)
    ]);
    return result[0].toBoolean();
  }

  signRequestOrder(
    _requestorder: IexecClerk__signRequestOrderInput_requestorderStruct
  ): boolean {
    let result = super.call("signRequestOrder", [
      EthereumValue.fromTuple(_requestorder)
    ]);
    return result[0].toBoolean();
  }

  matchOrders(
    _apporder: IexecClerk__matchOrdersInput_apporderStruct,
    _datasetorder: IexecClerk__matchOrdersInput_datasetorderStruct,
    _workerpoolorder: IexecClerk__matchOrdersInput_workerpoolorderStruct,
    _requestorder: IexecClerk__matchOrdersInput_requestorderStruct
  ): Bytes {
    let result = super.call("matchOrders", [
      EthereumValue.fromTuple(_apporder),
      EthereumValue.fromTuple(_datasetorder),
      EthereumValue.fromTuple(_workerpoolorder),
      EthereumValue.fromTuple(_requestorder)
    ]);
    return result[0].toBytes();
  }

  cancelAppOrder(
    _apporder: IexecClerk__cancelAppOrderInput_apporderStruct
  ): boolean {
    let result = super.call("cancelAppOrder", [
      EthereumValue.fromTuple(_apporder)
    ]);
    return result[0].toBoolean();
  }

  cancelDatasetOrder(
    _datasetorder: IexecClerk__cancelDatasetOrderInput_datasetorderStruct
  ): boolean {
    let result = super.call("cancelDatasetOrder", [
      EthereumValue.fromTuple(_datasetorder)
    ]);
    return result[0].toBoolean();
  }

  cancelWorkerpoolOrder(
    _workerpoolorder: IexecClerk__cancelWorkerpoolOrderInput_workerpoolorderStruct
  ): boolean {
    let result = super.call("cancelWorkerpoolOrder", [
      EthereumValue.fromTuple(_workerpoolorder)
    ]);
    return result[0].toBoolean();
  }

  cancelRequestOrder(
    _requestorder: IexecClerk__cancelRequestOrderInput_requestorderStruct
  ): boolean {
    let result = super.call("cancelRequestOrder", [
      EthereumValue.fromTuple(_requestorder)
    ]);
    return result[0].toBoolean();
  }

  viewDealABILegacy_pt1(_id: Bytes): IexecClerk__viewDealABILegacy_pt1Result {
    let result = super.call("viewDealABILegacy_pt1", [
      EthereumValue.fromFixedBytes(_id)
    ]);
    return new IexecClerk__viewDealABILegacy_pt1Result(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toAddress(),
      result[5].toBigInt(),
      result[6].toAddress(),
      result[7].toAddress(),
      result[8].toBigInt()
    );
  }

  viewDealABILegacy_pt2(_id: Bytes): IexecClerk__viewDealABILegacy_pt2Result {
    let result = super.call("viewDealABILegacy_pt2", [
      EthereumValue.fromFixedBytes(_id)
    ]);
    return new IexecClerk__viewDealABILegacy_pt2Result(
      result[0].toBigInt(),
      result[1].toBytes(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toAddress(),
      result[5].toString()
    );
  }

  viewConfigABILegacy(_id: Bytes): IexecClerk__viewConfigABILegacyResult {
    let result = super.call("viewConfigABILegacy", [
      EthereumValue.fromFixedBytes(_id)
    ]);
    return new IexecClerk__viewConfigABILegacyResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  viewAccountABILegacy(_user: Address): IexecClerk__viewAccountABILegacyResult {
    let result = super.call("viewAccountABILegacy", [
      EthereumValue.fromAddress(_user)
    ]);
    return new IexecClerk__viewAccountABILegacyResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }
}

export class WithdrawCall extends EthereumCall {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DepositForArrayCall extends EthereumCall {
  get inputs(): DepositForArrayCall__Inputs {
    return new DepositForArrayCall__Inputs(this);
  }

  get outputs(): DepositForArrayCall__Outputs {
    return new DepositForArrayCall__Outputs(this);
  }
}

export class DepositForArrayCall__Inputs {
  _call: DepositForArrayCall;

  constructor(call: DepositForArrayCall) {
    this._call = call;
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _targets(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class DepositForArrayCall__Outputs {
  _call: DepositForArrayCall;

  constructor(call: DepositForArrayCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DepositForCall extends EthereumCall {
  get inputs(): DepositForCall__Inputs {
    return new DepositForCall__Inputs(this);
  }

  get outputs(): DepositForCall__Outputs {
    return new DepositForCall__Outputs(this);
  }
}

export class DepositForCall__Inputs {
  _call: DepositForCall;

  constructor(call: DepositForCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DepositForCall__Outputs {
  _call: DepositForCall;

  constructor(call: DepositForCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BroadcastRequestOrderCall extends EthereumCall {
  get inputs(): BroadcastRequestOrderCall__Inputs {
    return new BroadcastRequestOrderCall__Inputs(this);
  }

  get outputs(): BroadcastRequestOrderCall__Outputs {
    return new BroadcastRequestOrderCall__Outputs(this);
  }
}

export class BroadcastRequestOrderCall__Inputs {
  _call: BroadcastRequestOrderCall;

  constructor(call: BroadcastRequestOrderCall) {
    this._call = call;
  }

  get _requestorder(): BroadcastRequestOrderCall_requestorderStruct {
    return this._call.inputValues[0].value.toTuple() as BroadcastRequestOrderCall_requestorderStruct;
  }
}

export class BroadcastRequestOrderCall__Outputs {
  _call: BroadcastRequestOrderCall;

  constructor(call: BroadcastRequestOrderCall) {
    this._call = call;
  }
}

export class BroadcastRequestOrderCall_requestorderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class BroadcastDatasetOrderCall extends EthereumCall {
  get inputs(): BroadcastDatasetOrderCall__Inputs {
    return new BroadcastDatasetOrderCall__Inputs(this);
  }

  get outputs(): BroadcastDatasetOrderCall__Outputs {
    return new BroadcastDatasetOrderCall__Outputs(this);
  }
}

export class BroadcastDatasetOrderCall__Inputs {
  _call: BroadcastDatasetOrderCall;

  constructor(call: BroadcastDatasetOrderCall) {
    this._call = call;
  }

  get _datasetorder(): BroadcastDatasetOrderCall_datasetorderStruct {
    return this._call.inputValues[0].value.toTuple() as BroadcastDatasetOrderCall_datasetorderStruct;
  }
}

export class BroadcastDatasetOrderCall__Outputs {
  _call: BroadcastDatasetOrderCall;

  constructor(call: BroadcastDatasetOrderCall) {
    this._call = call;
  }
}

export class BroadcastDatasetOrderCall_datasetorderStruct extends EthereumTuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class BroadcastWorkerpoolOrderCall extends EthereumCall {
  get inputs(): BroadcastWorkerpoolOrderCall__Inputs {
    return new BroadcastWorkerpoolOrderCall__Inputs(this);
  }

  get outputs(): BroadcastWorkerpoolOrderCall__Outputs {
    return new BroadcastWorkerpoolOrderCall__Outputs(this);
  }
}

export class BroadcastWorkerpoolOrderCall__Inputs {
  _call: BroadcastWorkerpoolOrderCall;

  constructor(call: BroadcastWorkerpoolOrderCall) {
    this._call = call;
  }

  get _workerpoolorder(): BroadcastWorkerpoolOrderCall_workerpoolorderStruct {
    return this._call.inputValues[0].value.toTuple() as BroadcastWorkerpoolOrderCall_workerpoolorderStruct;
  }
}

export class BroadcastWorkerpoolOrderCall__Outputs {
  _call: BroadcastWorkerpoolOrderCall;

  constructor(call: BroadcastWorkerpoolOrderCall) {
    this._call = call;
  }
}

export class BroadcastWorkerpoolOrderCall_workerpoolorderStruct extends EthereumTuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class DepositCall extends EthereumCall {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BroadcastAppOrderCall extends EthereumCall {
  get inputs(): BroadcastAppOrderCall__Inputs {
    return new BroadcastAppOrderCall__Inputs(this);
  }

  get outputs(): BroadcastAppOrderCall__Outputs {
    return new BroadcastAppOrderCall__Outputs(this);
  }
}

export class BroadcastAppOrderCall__Inputs {
  _call: BroadcastAppOrderCall;

  constructor(call: BroadcastAppOrderCall) {
    this._call = call;
  }

  get _apporder(): BroadcastAppOrderCall_apporderStruct {
    return this._call.inputValues[0].value.toTuple() as BroadcastAppOrderCall_apporderStruct;
  }
}

export class BroadcastAppOrderCall__Outputs {
  _call: BroadcastAppOrderCall;

  constructor(call: BroadcastAppOrderCall) {
    this._call = call;
  }
}

export class BroadcastAppOrderCall_apporderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _iexechub(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _chainid(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SignAppOrderCall extends EthereumCall {
  get inputs(): SignAppOrderCall__Inputs {
    return new SignAppOrderCall__Inputs(this);
  }

  get outputs(): SignAppOrderCall__Outputs {
    return new SignAppOrderCall__Outputs(this);
  }
}

export class SignAppOrderCall__Inputs {
  _call: SignAppOrderCall;

  constructor(call: SignAppOrderCall) {
    this._call = call;
  }

  get _apporder(): SignAppOrderCall_apporderStruct {
    return this._call.inputValues[0].value.toTuple() as SignAppOrderCall_apporderStruct;
  }
}

export class SignAppOrderCall__Outputs {
  _call: SignAppOrderCall;

  constructor(call: SignAppOrderCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SignAppOrderCall_apporderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class SignDatasetOrderCall extends EthereumCall {
  get inputs(): SignDatasetOrderCall__Inputs {
    return new SignDatasetOrderCall__Inputs(this);
  }

  get outputs(): SignDatasetOrderCall__Outputs {
    return new SignDatasetOrderCall__Outputs(this);
  }
}

export class SignDatasetOrderCall__Inputs {
  _call: SignDatasetOrderCall;

  constructor(call: SignDatasetOrderCall) {
    this._call = call;
  }

  get _datasetorder(): SignDatasetOrderCall_datasetorderStruct {
    return this._call.inputValues[0].value.toTuple() as SignDatasetOrderCall_datasetorderStruct;
  }
}

export class SignDatasetOrderCall__Outputs {
  _call: SignDatasetOrderCall;

  constructor(call: SignDatasetOrderCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SignDatasetOrderCall_datasetorderStruct extends EthereumTuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class SignWorkerpoolOrderCall extends EthereumCall {
  get inputs(): SignWorkerpoolOrderCall__Inputs {
    return new SignWorkerpoolOrderCall__Inputs(this);
  }

  get outputs(): SignWorkerpoolOrderCall__Outputs {
    return new SignWorkerpoolOrderCall__Outputs(this);
  }
}

export class SignWorkerpoolOrderCall__Inputs {
  _call: SignWorkerpoolOrderCall;

  constructor(call: SignWorkerpoolOrderCall) {
    this._call = call;
  }

  get _workerpoolorder(): SignWorkerpoolOrderCall_workerpoolorderStruct {
    return this._call.inputValues[0].value.toTuple() as SignWorkerpoolOrderCall_workerpoolorderStruct;
  }
}

export class SignWorkerpoolOrderCall__Outputs {
  _call: SignWorkerpoolOrderCall;

  constructor(call: SignWorkerpoolOrderCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SignWorkerpoolOrderCall_workerpoolorderStruct extends EthereumTuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class SignRequestOrderCall extends EthereumCall {
  get inputs(): SignRequestOrderCall__Inputs {
    return new SignRequestOrderCall__Inputs(this);
  }

  get outputs(): SignRequestOrderCall__Outputs {
    return new SignRequestOrderCall__Outputs(this);
  }
}

export class SignRequestOrderCall__Inputs {
  _call: SignRequestOrderCall;

  constructor(call: SignRequestOrderCall) {
    this._call = call;
  }

  get _requestorder(): SignRequestOrderCall_requestorderStruct {
    return this._call.inputValues[0].value.toTuple() as SignRequestOrderCall_requestorderStruct;
  }
}

export class SignRequestOrderCall__Outputs {
  _call: SignRequestOrderCall;

  constructor(call: SignRequestOrderCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SignRequestOrderCall_requestorderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class MatchOrdersCall extends EthereumCall {
  get inputs(): MatchOrdersCall__Inputs {
    return new MatchOrdersCall__Inputs(this);
  }

  get outputs(): MatchOrdersCall__Outputs {
    return new MatchOrdersCall__Outputs(this);
  }
}

export class MatchOrdersCall__Inputs {
  _call: MatchOrdersCall;

  constructor(call: MatchOrdersCall) {
    this._call = call;
  }

  get _apporder(): MatchOrdersCall_apporderStruct {
    return this._call.inputValues[0].value.toTuple() as MatchOrdersCall_apporderStruct;
  }

  get _datasetorder(): MatchOrdersCall_datasetorderStruct {
    return this._call.inputValues[1].value.toTuple() as MatchOrdersCall_datasetorderStruct;
  }

  get _workerpoolorder(): MatchOrdersCall_workerpoolorderStruct {
    return this._call.inputValues[2].value.toTuple() as MatchOrdersCall_workerpoolorderStruct;
  }

  get _requestorder(): MatchOrdersCall_requestorderStruct {
    return this._call.inputValues[3].value.toTuple() as MatchOrdersCall_requestorderStruct;
  }
}

export class MatchOrdersCall__Outputs {
  _call: MatchOrdersCall;

  constructor(call: MatchOrdersCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class MatchOrdersCall_apporderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class MatchOrdersCall_datasetorderStruct extends EthereumTuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class MatchOrdersCall_workerpoolorderStruct extends EthereumTuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class MatchOrdersCall_requestorderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class CancelAppOrderCall extends EthereumCall {
  get inputs(): CancelAppOrderCall__Inputs {
    return new CancelAppOrderCall__Inputs(this);
  }

  get outputs(): CancelAppOrderCall__Outputs {
    return new CancelAppOrderCall__Outputs(this);
  }
}

export class CancelAppOrderCall__Inputs {
  _call: CancelAppOrderCall;

  constructor(call: CancelAppOrderCall) {
    this._call = call;
  }

  get _apporder(): CancelAppOrderCall_apporderStruct {
    return this._call.inputValues[0].value.toTuple() as CancelAppOrderCall_apporderStruct;
  }
}

export class CancelAppOrderCall__Outputs {
  _call: CancelAppOrderCall;

  constructor(call: CancelAppOrderCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelAppOrderCall_apporderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class CancelDatasetOrderCall extends EthereumCall {
  get inputs(): CancelDatasetOrderCall__Inputs {
    return new CancelDatasetOrderCall__Inputs(this);
  }

  get outputs(): CancelDatasetOrderCall__Outputs {
    return new CancelDatasetOrderCall__Outputs(this);
  }
}

export class CancelDatasetOrderCall__Inputs {
  _call: CancelDatasetOrderCall;

  constructor(call: CancelDatasetOrderCall) {
    this._call = call;
  }

  get _datasetorder(): CancelDatasetOrderCall_datasetorderStruct {
    return this._call.inputValues[0].value.toTuple() as CancelDatasetOrderCall_datasetorderStruct;
  }
}

export class CancelDatasetOrderCall__Outputs {
  _call: CancelDatasetOrderCall;

  constructor(call: CancelDatasetOrderCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelDatasetOrderCall_datasetorderStruct extends EthereumTuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class CancelWorkerpoolOrderCall extends EthereumCall {
  get inputs(): CancelWorkerpoolOrderCall__Inputs {
    return new CancelWorkerpoolOrderCall__Inputs(this);
  }

  get outputs(): CancelWorkerpoolOrderCall__Outputs {
    return new CancelWorkerpoolOrderCall__Outputs(this);
  }
}

export class CancelWorkerpoolOrderCall__Inputs {
  _call: CancelWorkerpoolOrderCall;

  constructor(call: CancelWorkerpoolOrderCall) {
    this._call = call;
  }

  get _workerpoolorder(): CancelWorkerpoolOrderCall_workerpoolorderStruct {
    return this._call.inputValues[0].value.toTuple() as CancelWorkerpoolOrderCall_workerpoolorderStruct;
  }
}

export class CancelWorkerpoolOrderCall__Outputs {
  _call: CancelWorkerpoolOrderCall;

  constructor(call: CancelWorkerpoolOrderCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelWorkerpoolOrderCall_workerpoolorderStruct extends EthereumTuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class CancelRequestOrderCall extends EthereumCall {
  get inputs(): CancelRequestOrderCall__Inputs {
    return new CancelRequestOrderCall__Inputs(this);
  }

  get outputs(): CancelRequestOrderCall__Outputs {
    return new CancelRequestOrderCall__Outputs(this);
  }
}

export class CancelRequestOrderCall__Inputs {
  _call: CancelRequestOrderCall;

  constructor(call: CancelRequestOrderCall) {
    this._call = call;
  }

  get _requestorder(): CancelRequestOrderCall_requestorderStruct {
    return this._call.inputValues[0].value.toTuple() as CancelRequestOrderCall_requestorderStruct;
  }
}

export class CancelRequestOrderCall__Outputs {
  _call: CancelRequestOrderCall;

  constructor(call: CancelRequestOrderCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelRequestOrderCall_requestorderStruct extends EthereumTuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class LockContributionCall extends EthereumCall {
  get inputs(): LockContributionCall__Inputs {
    return new LockContributionCall__Inputs(this);
  }

  get outputs(): LockContributionCall__Outputs {
    return new LockContributionCall__Outputs(this);
  }
}

export class LockContributionCall__Inputs {
  _call: LockContributionCall;

  constructor(call: LockContributionCall) {
    this._call = call;
  }

  get _dealid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _worker(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class LockContributionCall__Outputs {
  _call: LockContributionCall;

  constructor(call: LockContributionCall) {
    this._call = call;
  }
}

export class UnlockContributionCall extends EthereumCall {
  get inputs(): UnlockContributionCall__Inputs {
    return new UnlockContributionCall__Inputs(this);
  }

  get outputs(): UnlockContributionCall__Outputs {
    return new UnlockContributionCall__Outputs(this);
  }
}

export class UnlockContributionCall__Inputs {
  _call: UnlockContributionCall;

  constructor(call: UnlockContributionCall) {
    this._call = call;
  }

  get _dealid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _worker(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UnlockContributionCall__Outputs {
  _call: UnlockContributionCall;

  constructor(call: UnlockContributionCall) {
    this._call = call;
  }
}

export class UnlockAndRewardForContributionCall extends EthereumCall {
  get inputs(): UnlockAndRewardForContributionCall__Inputs {
    return new UnlockAndRewardForContributionCall__Inputs(this);
  }

  get outputs(): UnlockAndRewardForContributionCall__Outputs {
    return new UnlockAndRewardForContributionCall__Outputs(this);
  }
}

export class UnlockAndRewardForContributionCall__Inputs {
  _call: UnlockAndRewardForContributionCall;

  constructor(call: UnlockAndRewardForContributionCall) {
    this._call = call;
  }

  get _dealid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _worker(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _taskid(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class UnlockAndRewardForContributionCall__Outputs {
  _call: UnlockAndRewardForContributionCall;

  constructor(call: UnlockAndRewardForContributionCall) {
    this._call = call;
  }
}

export class SeizeContributionCall extends EthereumCall {
  get inputs(): SeizeContributionCall__Inputs {
    return new SeizeContributionCall__Inputs(this);
  }

  get outputs(): SeizeContributionCall__Outputs {
    return new SeizeContributionCall__Outputs(this);
  }
}

export class SeizeContributionCall__Inputs {
  _call: SeizeContributionCall;

  constructor(call: SeizeContributionCall) {
    this._call = call;
  }

  get _dealid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _worker(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _taskid(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SeizeContributionCall__Outputs {
  _call: SeizeContributionCall;

  constructor(call: SeizeContributionCall) {
    this._call = call;
  }
}

export class RewardForSchedulingCall extends EthereumCall {
  get inputs(): RewardForSchedulingCall__Inputs {
    return new RewardForSchedulingCall__Inputs(this);
  }

  get outputs(): RewardForSchedulingCall__Outputs {
    return new RewardForSchedulingCall__Outputs(this);
  }
}

export class RewardForSchedulingCall__Inputs {
  _call: RewardForSchedulingCall;

  constructor(call: RewardForSchedulingCall) {
    this._call = call;
  }

  get _dealid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _taskid(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class RewardForSchedulingCall__Outputs {
  _call: RewardForSchedulingCall;

  constructor(call: RewardForSchedulingCall) {
    this._call = call;
  }
}

export class SuccessWorkCall extends EthereumCall {
  get inputs(): SuccessWorkCall__Inputs {
    return new SuccessWorkCall__Inputs(this);
  }

  get outputs(): SuccessWorkCall__Outputs {
    return new SuccessWorkCall__Outputs(this);
  }
}

export class SuccessWorkCall__Inputs {
  _call: SuccessWorkCall;

  constructor(call: SuccessWorkCall) {
    this._call = call;
  }

  get _dealid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _taskid(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SuccessWorkCall__Outputs {
  _call: SuccessWorkCall;

  constructor(call: SuccessWorkCall) {
    this._call = call;
  }
}

export class FailedWorkCall extends EthereumCall {
  get inputs(): FailedWorkCall__Inputs {
    return new FailedWorkCall__Inputs(this);
  }

  get outputs(): FailedWorkCall__Outputs {
    return new FailedWorkCall__Outputs(this);
  }
}

export class FailedWorkCall__Inputs {
  _call: FailedWorkCall;

  constructor(call: FailedWorkCall) {
    this._call = call;
  }

  get _dealid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _taskid(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class FailedWorkCall__Outputs {
  _call: FailedWorkCall;

  constructor(call: FailedWorkCall) {
    this._call = call;
  }
}
